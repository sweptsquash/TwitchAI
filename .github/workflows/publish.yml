name: Publish

permissions:
  contents: write

on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Build Binaries for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      APP_NAME: "Sen AI Assistant"
      APP_KEY: ${{ secrets.APP_KEY }}
      APP_ENV: prod
      APP_DEBUG: false
      APP_URL: http://127.0.0.1:8100
      LOG_CHANNEL: stack
      LOG_DEPRECATIONS_CHANNEL: null
      LOG_LEVEL: debug
      DB_CONNECTION: sqlite
      DB_DATABASE: database/database.sqlite
      DB_FOREIGN_KEYS: true
      BROADCAST_DRIVER: log
      CACHE_DRIVER: file
      FILESYSTEM_DISK: local
      QUEUE_CONNECTION: sync
      SESSION_DRIVER: file
      SESSION_LIFETIME: 120
      MEMCACHED_HOST: 127.0.0.1
      REDIS_HOST: 127.0.0.1
      REDIS_PASSWORD: null
      REDIS_PORT: 6379
      VITE_APP_NAME: "Sen AI Assistant"
      NATIVEPHP_APP_AUTHOR: "Stewart Marsh"
      NATIVEPHP_UPDATER_ENABLED: false
      NATIVEPHP_APP_ID: "com.senshudo.senai"
      NATIVEPHP_DATABASE_PATH: "database/nativephp.sqlite"

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            name: linux
            latest: latest-linux
            ext: deb
          - os: ubuntu-latest
            name: win
            latest: latest
            ext: exe
          #- os: macos-latest
          #  name: mac
          #  latest: latest-mac
          #  ext: dmg

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Prerequisites
        if: matrix.name == 'win'
        run: |
          sudo dpkg --add-architecture i386
          sudo mkdir -pm755 /etc/apt/keyrings
          sudo wget -O /etc/apt/keyrings/winehq-archive.key https://dl.winehq.org/wine-builds/winehq.key
          sudo wget -NP /etc/apt/sources.list.d/ https://dl.winehq.org/wine-builds/ubuntu/dists/focal/winehq-focal.sources
          sudo apt-get update && sudo apt-get install --install-recommends -y gcc-multilib g++-multilib winehq-stable

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: dom, curl, libxml, bcmath, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd, igbinary, msgpack, lzf, zstd, lz4, memcached, gmp, fileinfo
          ini-values: log_errors=On, error_reporting=E_ALL, error_log=~/phpunit/php_errors.log, date.timezone=UTC, memory_limit=-1, max_execution_time=-1, display_errors=On, display_startup_errors=On
          tools: composer:v2
          coverage: pcov

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install Node.js dependencies
        run: npm ci

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: |
          composer install --no-dev --no-progress --no-scripts -n -o
          php artisan native:install --no-interaction

      - name: Build Prod Frontend
        run: npm run build:prod

      - name: Build Application
        run: php artisan native:build ${{ matrix.name }} --no-interaction

      - name: Run YAML to Github Output Action
        if: ${{ success() && matrix.os == 'ubuntu-latest' }}
        uses: christian-ci/action-yaml-github-output@v2
        id: yaml-output
        with:
          file_path: dist/${{ matrix.latest }}.yml

      - name: Linux/MacOS Use YAML
        if: matrix.name == 'linux' || matrix.name == 'mac'
        run: |
          echo "SEN_VERSION=${{ steps.yaml-output.outputs.version }}" >> $GITHUB_ENV
          echo "SEN_PATH=${{ steps.yaml-output.outputs.path }}" >> $GITHUB_ENV

      - name: Windows Use YAML
        if: matrix.name == 'win'
        run: |
          echo "SEN_VERSION=${{ steps.yaml-output.outputs.version }}" >> $env:$GITHUB_ENV
          echo "SEN_PATH=${{ steps.yaml-output.outputs.path }}" >> $env:$GITHUB_ENV

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: "dist/${{ env.SEN_PATH }}"
          asset_name: "SenAIAssistant-${{ env.SEN_VERSION }}.${{ matrix.ext }}"
          tag: ${{ github.ref }}
